name: Benchmark Bot

env:
  DEFAULT_OPPONENT: EvilBot
  DEFAULT_JOBS: 22
  DEFAULT_FENS: 2

on:
  push:
    branches:
      - main

  pull_request:
    types: [opened, synchronize, reopened]

  issue_comment:
    types: [created]

  workflow_dispatch:
    inputs:
      opponent:
        description: 'Opponent'
        required: true
        default: EvilBot
      jobs:
        description: 'Jobs'
        required: true
        default: 2
      fens:
        description: 'Fens'
        required: true
        default: 2
      env:
        description: 'Environment variables to set'
        required: false

permissions:
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  prepare:
    runs-on: ubuntu-latest

    outputs:
      opponent: ${{ steps.output.outputs.opponent }}
      fens: ${{ steps.output.outputs.fens }}
      jobs: ${{ steps.output.outputs.jobs }}
      env: ${{ steps.output.outputs.env }}
      opponent_long: ${{ steps.output.outputs.opponent_long }}
      remote_opponent: ${{ steps.output.outputs.remote_opponent }}

    steps:

      - name: Prepare (Dispatch)
        if: github.event_name == 'workflow_dispatch'
        id: prepare_dispatch
        run: |
          echo "OPPONENT=${{ github.event.inputs.opponent }}" >> GITHUB_OUTPUT
          echo "FENS=${{ github.event.inputs.fens }}" >> GITHUB_OUTPUT
          echo "JOBS=${{ github.event.inputs.jobs }}" >> GITHUB_OUTPUT
          echo "ENV=${{ github.event.inputs.env }}" >> GITHUB_OUTPUT

      - name: Checkout code
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Prepare (Push & PR)
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        id: prepare_push
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "OPPONENT=$(echo commit_message | grep -oP 'opponent::\K\w+')" >> GITHUB_OUTPUT
          echo "FENS=$(echo commit_message | grep -oP 'fens::\K\d+')" >> GITHUB_OUTPUT
          echo "JOBS=$(echo commit_message | grep -oP 'jobs::\K\d+')" >> GITHUB_OUTPUT
          echo "ENV=$(echo commit_message | grep -oP 'env::\K\S+')" >> GITHUB_OUTPUT

      - name: Output
        id: output
        env:
          OPPONENT: ${{ steps.prepare_dispatch.outputs.opponent || steps.prepare_push.outputs.opponent || env.DEFAULT_OPPONENT }}
          FENS: ${{ steps.prepare_dispatch.outputs.fens || steps.prepare_push.outputs.fens || env.DEFAULT_FENS }}
          JOBS: ${{ steps.prepare_dispatch.outputs.jobs || steps.prepare_push.outputs.jobs || env.DEFAULT_JOBS }}
          ENV: ${{ steps.prepare_dispatch.outputs.env || steps.prepare_push.outputs.env || '""' }}
        run: |
          OPPONENT_LONG=$OPPONENT
          if [[ $OPPONENT = Stockfish_* ]]; then
            LEVEL=$(echo $OPPONENT | grep -oP 'Stockfish_\K\d+' || echo 0)
            ENV="$ENV:STOCKFISH_LEVEL=$LEVEL"

            OPPONENT_LONG="Stockfish ($LEVEL)"
          elif [[ $OPPONENT = Stockfish ]]; then
            ENV="$ENV:STOCKFISH_LEVEL=0"
            OPPONENT_LONG="Stockfish (0)"
          fi

          REMOTE_OPPONENT=$(wget -q $OPPONENT && echo true || echo false)

          echo "opponent=$OPPONENT" >> GITHUB_OUTPUT
          echo "opponent_long=$OPPONENT_LONG" >> GITHUB_OUTPUT
          echo "fens=$FENS" >> GITHUB_OUTPUT
          echo "jobs=$JOBS" >> GITHUB_OUTPUT
          echo "env=$ENV" >> GITHUB_OUTPUT
          echo "remote_opponent=$REMOTE_OPPONENT" >> GITHUB_OUTPUT

      - name: Notice
        run: |
          OPPONENT=${{ steps.output.outputs.opponent }}
          OPPONENT_LONG=${{ steps.output.outputs.opponent_long }}
          FENS=${{ steps.output.outputs.fens }}
          JOBS=${{ steps.output.outputs.jobs }}
          ENV=${{ steps.output.outputs.env }}
          REMOTE_OPPONENT=${{ steps.output.outputs.remote_opponent }}
          echo "::notice::opponent=$OPPONENT, opponent_long=$OPPONENT_LONG, fens=$FENS, jobs=$JOBS, env=$ENV, remote_opponent=$REMOTE_OPPONENT"





  benchmark:
    needs: prepare
    uses: ./.github/workflows/benchmark.yaml
    with:
      opponent: ${{ needs.prepare.outputs.opponent }}
      opponent_long: ${{ needs.prepare.outputs.opponent_long }}
      jobs: ${{ fromJSON(needs.prepare.outputs.jobs) }}
      fens: ${{ fromJSON(needs.prepare.outputs.fens) }}
      run: 'echo "${{ needs.prepare.outputs.env }}" >> $GITHUB_ENV'
      remote_opponent: ${{ fromJSON(needs.prepare.outputs.remote_opponent) }}

  publish:
    needs:
      - prepare
      - benchmark
    uses: ./.github/workflows/publish.yaml
    with:
      opponent: ${{ needs.prepare.outputs.opponent_long }}
      wins: ${{ fromJSON(needs.benchmark.outputs.wins) }}
      draws: ${{ fromJSON(needs.benchmark.outputs.draws) }}
      losses: ${{ fromJSON(needs.benchmark.outputs.losses) }}
